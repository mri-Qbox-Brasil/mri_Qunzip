name: Build and Release

on:
    push:
        tags:
            - "v*.*.*"

permissions:
    contents: write
    actions: write

jobs:
    build_and_release:
        runs-on: ubuntu-latest
        outputs:
            version: ${{ steps.get_project_information.outputs.version }}
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "16"

            - name: Install dependencies
              working-directory: ./src
              run: npm install

            - name: Build project
              working-directory: ./src
              run: npm run build

            - name: Get commit messages, version, and repository description
              id: get_project_information
              run: |
                  LAST_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
                  CURRENT_TAG="${GITHUB_REF#refs/tags/}"

                  if [ -n "$LAST_TAG" ]; then
                    COMMITS=$(git log $LAST_TAG..$GITHUB_SHA --oneline --pretty=format:"%h %s")
                  else
                    COMMITS=$(git log --oneline --pretty=format:"%h %s")
                  fi

                  REPO_DESCRIPTION=$(curl -s https://api.github.com/repos/mri-Qbox-Brasil/mri_Qunzip | jq -r .description)
                  echo "version=$CURRENT_TAG" >> $GITHUB_OUTPUT
                  echo "$COMMITS" > ./release_body.txt

            - name: Update version in file
              run: |
                  sed -i "s/MRIQBOX_VERSION/${{ steps.get_project_information.outputs.version }}/g" fxmanifest.lua

            - name: Create ZIP file
              run: |
                  zip -r --symlinks "${{ github.event.repository.name }}.zip" . \
                  -x "./src/*" \
                  -x "./src/**" \
                  -x "./.github/*" \
                  -x "./.github/**" \
                  -x ".git/*" \
                  -x ".git/**" \
                  -x "*.txt" \
                  -x "*.lock" \
                  -x ".gitignore" \
                  -x ".editorconfig"

            - name: Generate Release
              uses: comnoco/create-release-action@v2
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              id: release
              with:
                  tag_name: "${{ steps.get_project_information.outputs.version }}"
                  release_name: "${{ steps.get_project_information.outputs.version }}"
                  body: ${{ steps.get_project_information.outputs.commits }}
                  draft: false
                  prerelease: false

            - name: Upload artifacts
              uses: shogo82148/actions-upload-release-asset@v1.7.7
              with:
                  upload_url: ${{ steps.release.outputs.upload_url }}
                  asset_path: ${{ github.event.repository.name }}.zip

    post_to_discord:
        needs: build_and_release
        runs-on: ubuntu-latest
        steps:
            - name: Post to Discord (with embed)
              env:
                  DISCORD_WEBHOOK_URL: ${{ secrets.UPDATE_DISCORD_WEBHOOK }}
                  RELEASE_URL: https://github.com/${{ github.repository }}/releases/latest
                  RELEASE_TAG: ${{ github.ref_name }}
                  RELEASE_AUTHOR: ${{ github.actor }}
              run: |
                  REPO_DESCRIPTION=$(curl -s https://api.github.com/repos/${{ github.repository }} | jq -r .description)

                  EMBED_DATA='{
                      "embeds": [{
                      "title": "[${{ github.event.repository.name }}] Nova versão disponível: '"${RELEASE_TAG}"'",
                      "url": "'"${RELEASE_URL}"'",
                      "description": "'"${REPO_DESCRIPTION}"'",
                      "color": 4243543,
                      "footer": {
                          "text": "MRI QBOX - Liberado por: '"${RELEASE_AUTHOR}"'",
                          "icon_url": "https://assets.mriqbox.com.br/branding/logo96.png"
                      },
                      "timestamp": "'"$(date --utc +%Y-%m-%dT%H:%M:%SZ)"'"
                      }]
                  }'

                  curl -H "Content-Type: application/json" \
                      -d "$EMBED_DATA" \
                      $DISCORD_WEBHOOK_URL
